!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,n.Hammer=e()}}(function(){return function e(n,o,t){function i(a,s){if(!o[a]){if(!n[a]){var p="function"==typeof require&&require;if(!s&&p)return p(a,!0);if(r)return r(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var f=o[a]={exports:{}};n[a][0].call(f.exports,function(e){var o=n[a][1][e];return i(o?o:e)},f,f.exports,e,n,o,t)}return o[a].exports}for(var r="function"==typeof require&&require,a=0;a<t.length;a++)i(t[a]);return i}({1:[function(e,n,o){(function(o){function t(e,n){n.hasOwnProperty("vertical")&&console.warn("vertical is deprecated, please use `direction` instead");var o=n.direction;if(o||n.hasOwnProperty("vertical")){var t=o?o:n.vertical?"DIRECTION_ALL":"DIRECTION_HORIZONTAL";e.get("pan").set({direction:r[t]}),e.get("swipe").set({direction:r[t]})}n.options&&Object.keys(n.options).forEach(function(o){if("recognizers"===o)Object.keys(n.options.recognizers).forEach(function(o){var t=e.get(o);t.set(n.options.recognizers[o]),n.options.recognizers[o].requireFailure&&t.requireFailure(n.options.recognizers[o].requireFailure)},this);else{var t=o,i={};i[t]=n.options[o],e.set(i)}},this),n.recognizeWith&&Object.keys(n.recognizeWith).forEach(function(o){var t=e.get(o);t.recognizeWith(n.recognizeWith[o])},this),Object.keys(n).forEach(function(o){var t=s[o];t&&(e.off(t),e.on(t,n[o]))})}var i="undefined"!=typeof window?window.React:"undefined"!=typeof o?o.React:null,r=("undefined"!=typeof window?window.ReactDOM:"undefined"!=typeof o?o.ReactDOM:null,"undefined"!=typeof window?e("hammerjs"):void 0),a={children:!0,direction:!0,options:!0,recognizeWith:!0,vertical:!0},s={action:"tap press",onDoubleTap:"doubletap",onPan:"pan",onPanCancel:"pancancel",onPanEnd:"panend",onPanMove:"panmove",onPanStart:"panstart",onPinch:"pinch",onPinchCancel:"pinchcancel",onPinchEnd:"pinchend",onPinchIn:"pinchin",onPinchOut:"pinchout",onPinchStart:"pinchstart",onPress:"press",onPressUp:"pressup",onRotate:"rotate",onRotateCancel:"rotatecancel",onRotateEnd:"rotateend",onRotateMove:"rotatemove",onRotateStart:"rotatestart",onSwipe:"swipe",onSwipeRight:"swiperight",onSwipeLeft:"swipeleft",onSwipeUp:"swipeup",onSwipeDown:"swipedown",onTap:"tap"};Object.keys(s).forEach(function(e){a[e]=!0});var p=i.createClass({displayName:"Hammer",propTypes:{className:i.PropTypes.string},componentDidMount:function(){this.hammer=new r(this.domElement),t(this.hammer,this.props)},componentDidUpdate:function(){this.hammer&&t(this.hammer,this.props)},componentWillUnmount:function(){this.hammer&&(this.hammer.stop(),this.hammer.destroy()),this.hammer=null},render:function(){var e={};Object.keys(this.props).forEach(function(n){a[n]||(e[n]=this.props[n])},this);var n=this;return e.ref=function(e){n.props.ref&&n.props.ref(e),n.domElement=e},i.cloneElement(i.Children.only(this.props.children),e)}});n.exports=p}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{hammerjs:void 0}]},{},[1])(1)});